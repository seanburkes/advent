/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package advent

import java.awt.Point
import java.io.File
import kotlin.collections.mutableListOf
import kotlin.math.abs

public fun String.getLinesFromFile(): List<String> {
    return File(this).useLines { it.toList() }
}

public fun List<String>.parseLinesToGrid(): Array<Array<Int>> {
    var grid: Array<Array<Int>> = arrayOf()

    this.forEach { line ->
        run {
            val row = stringToIntArray(line)
            grid = grid + arrayOf(row)
        }
    }

    return grid
}

public fun stringToIntArray(line: String): Array<Int> {
    return line.map { it.toString().toInt() }.toTypedArray()
}

class Crt() {
  var register = 1
  var cycle = 1
  var strength = 0
  var pixels = mutableListOf<String>()

  fun runProgram(lines: List<String>) {
    lines.forEach{ line -> run {
      if (line == "noop") {
        draw()
        process()
      } else {
        var(_, value) = line.split(" ")
        draw()
        process()
        draw()
        process()
        register+=value.toInt()
      }
     }}
  }

  fun process() {
    cycle++
    if (cycle == 20 || cycle == 60 || cycle == 100 || cycle == 140 || cycle == 180 || cycle == 220) {
      println("Strength: "+(cycle*register))
      strength += (cycle*register)
    }
  }

  fun draw() {
    var sprite = (cycle%40)
    if (sprite == register || sprite == register+1 || sprite==register+2){
      pixels.add("#")
    } else {
      pixels.add(".")
    }
  }
}

fun main() {
    val file = "/home/sean/src/kotlin/advent/day10/input.txt"
    val lines = file.getLinesFromFile()

    var crt = Crt()
    crt.runProgram(lines)
    println("Sum: "+crt.strength)
    crt.pixels.forEachIndexed{ index, pixel -> run {
      print(pixel)
      if ((index+1)%40==0) println()
    }}
}
